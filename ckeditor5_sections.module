<?php

/**
 * @file
 * Contains hook implementations for the ckeditor5_sections module.
 */

use Drupal\ckeditor5_sections\DocumentSection;
use Drupal\ckeditor5_sections\Field\TextLongWithSectionsItem;
use Drupal\ckeditor5_sections\Field\TextWithSummaryAndSectionsItem;
use Drupal\ckeditor5_sections\Form\SectionsMediaLibraryUploadForm;

/**
 * Implements hook_views_data_alter().
 */
function ckeditor5_sections_views_data_alter(&$data) {
  // Use custom media select plugin.
  $data['media']['media_library_select_form']['field']['id'] = 'sections_media_library_select_form';

  $data['node_field_data']['node_library_select_form'] = $data['media']['media_library_select_form'];
  $data['node_field_data']['node_library_select_form']['title'] = t('Select Node');
  $data['node_field_data']['node_library_select_form']['real field'] = 'nid';
}

/**
 * Implements hook_module_implements_alter().
 */
function ckeditor5_sections_module_implements_alter(&$implementations, $hook) {
  switch ($hook) {
    case 'media_source_info_alter':
      $group = $implementations['ckeditor5_sections'];
      unset($implementations['ckeditor5_sections']);
      $implementations['ckeditor5_sections'] = $group;
      break;

    default:
      break;
  }
}

/**
 * Implements hook_field_info_alter().
 */
function ckeditor5_sections_field_info_alter(&$info) {
  $field_types = [
    'text_with_summary' => TextWithSummaryAndSectionsItem::class,
    'text_long' => TextLongWithSectionsItem::class,
  ];
  foreach ($field_types as $field_type => $class_name) {
    if (!empty($info[$field_type])) {
      $info[$field_type]['class'] = $class_name;
    }
  }
}

/**
 * Implements hook_media_source_info_alter().
 */
function ckeditor5_sections_media_source_info_alter(array &$sources) {
  $sources['audio_file']['forms']['media_library_add'] = SectionsMediaLibraryUploadForm::class;
  $sources['file']['forms']['media_library_add'] = SectionsMediaLibraryUploadForm::class;
  $sources['image']['forms']['media_library_add'] = SectionsMediaLibraryUploadForm::class;
  $sources['video_file']['forms']['media_library_add'] = SectionsMediaLibraryUploadForm::class;
}

/**
 * Implements hook_page_attachments().
 */
function ckeditor5_sections_page_attachments(array &$attachments) {
  // TODO: Allow loading of user defined libraries.
  $attachments['#attached']['library'][] = 'ckeditor5_sections/editor_components';
  $attachments['#attached']['library'][] = 'ckeditor5_sections/sections';
}

/**
 * Implements hook_ckeditor5_sections_editor_settings_alter().
 */
function ckeditor5_sections_ckeditor5_sections_editor_settings_alter(array &$settings) {
  /** @var \Drupal\ckeditor5_sections\MentionProviderPluginManager $mention_provider */
  $mention_provider = \Drupal::service('plugin.manager.ckeditor5_sections.mention_provider');
  $definitions = $mention_provider->getDefinitions();

  $feeds = [];
  foreach ($definitions as $id => $definition) {
    /** @var \Drupal\ckeditor5_sections\MentionProvider\MentionProviderInterface $plugin */
    $plugin = $mention_provider->createInstance($id);
    $feeds[] = $plugin->getMentionFeedDefinition();
  }
  $settings['mention']['feeds'] = $feeds;
}

/**
 * Implements hook_section_type_definitions_alter().
 */
function ckeditor5_sections_section_type_definitions_alter(&$definitions) {
  foreach (array_keys($definitions) as $key) {
    $type = &$definitions[$key];
    if (isset($type['fields']) && array_key_exists('data-media-type', $type['fields'])) {
      $typeDef = $type['fields']['data-media-type']['default'];
      if (strpos($typeDef, ':') !== FALSE) {
        list($entityType, $bundle) = explode(':', $typeDef);
      }
      else {
        $entityType = $typeDef;
      }
      $type['fields']['entity'] = [
        'label' => ucfirst($entityType) . ' Entity',
        'type' => 'entity:media',
      ];
    }
  }
}

/**
 * Implements hook_section_data_alter().
 */
function ckeditor5_sections_section_data_alter(&$data) {
  // TODO: Optimize this by loading multiple entities at once.
  ckeditor5_sections_attach_entities($data);
}

function ckeditor5_sections_attach_entities(DocumentSection $section) {
  $type = $section->get('data-media-type');
  $uuid = $section->get('data-media-uuid');
  if ($type && $uuid) {
    $entityType = explode(':', $type)[0];
    /** @var \Drupal\Core\Entity\EntityRepositoryInterface $entityRepository */
    $entityRepository = \Drupal::service('entity.repository');
    $section->set('entity', $entityRepository->loadEntityByUuid($entityType, $uuid));
  }

  foreach ($section->getFields() as $field) {
    if ($field instanceof DocumentSection) {
      ckeditor5_sections_attach_entities($field);
    }
    if (is_array($field)) {
      array_walk($field, 'ckeditor5_sections_attach_entities');
    }
  }
}
